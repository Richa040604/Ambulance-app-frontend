<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Master Interface</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        /* General Styles */
        body, html {
            height: 100%;
            margin: 0;
            font-family: 'Roboto', sans-serif;
            background-color: #f8f9fc;
            color: #2c3e50;
        }
        .tabs {
            display: flex;
            justify-content: space-around;
            background-color: #007bff;
            color: white;
            padding: 12px 0;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-bottom: 3px solid #0056b3;
        }
        .tab {
            cursor: pointer;
            padding: 12px 24px;
            font-size: 18px;
            font-weight: 500;
            transition: background-color 0.3s ease;
        }
        .tab:hover, .active-tab {
            background-color: #0056b3;
            border-bottom: 3px solid #004494;
        }
        .content {
            display: none;
            padding: 30px;
            height: calc(100% - 80px);
        }
        .active-content {
            display: block;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            font-size: 16px;
            color: #34495e;
        }
        input, textarea, select {
            width: 100%;
            padding: 12px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            font-size: 16px;
            transition: border-color 0.2s ease;
            background-color: #fff;
        }
        input:focus, textarea:focus, select:focus {
            border-color: #007bff;
            outline: none;
        }
        .button {
            padding: 12px 28px;
            font-size: 16px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
            font-weight: 500;
        }
        .button:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        .sos-button {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
        }
        .sos-button .button {
            background-color: #e74c3c;
            font-size: 18px;
            padding: 15px 40px;
            border-radius: 50px;
            font-weight: 600;
            text-transform: uppercase;
        }
        .sos-button .button:hover {
            background-color: #c0392b;
        }
        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            background-color: #ecf0f1;
            padding: 40px;
        }
        .login-box {
            width: 400px;
            padding: 40px;
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
            background-color: #fff;
        }
        .login-box h2 {
            margin-bottom: 30px;
            color: #007bff;
            font-size: 26px;
            font-weight: 600;
            text-align: center;
        }
        .leaflet-routing-container {
            width: 250px !important;
            max-height: 300px;
            font-size: 12px !important;
            overflow-y: auto;
            border: 1px solid #ddd;
            background: #fff;
            border-radius: 5px;
        }
        /* Legend styles */
        .legend {
            background: white;
            padding: 10px 15px;
            font-size: 12px;
            border: 1px solid #ccc;
            border-radius: 10px;
            position: absolute;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        .legend div {
            margin-bottom: 5px;
        }
        .legend .color-box {
            width: 16px;
            height: 16px;
            display: inline-block;
            margin-right: 8px;
            border-radius: 3px;
        }
        /* Customizing map containers */
        #map-patient, #map-driver {
            height: 60vh;
            width: 100%;
            margin: 20px 0;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="tabs">
        <div class="tab active-tab" onclick="switchTab('patient')">Patient POV</div>
        <div class="tab" onclick="switchTab('driver')">Driver POV</div>
        <div class="tab" onclick="switchTab('paramedic')">Paramedic POV</div>
    </div>

    <!-- Patient POV Content -->
    <div id="patient" class="content active-content">
        <div class="sos-button">
            <button class="button" onclick="orderAmbulance()">Order an Ambulance</button>
        </div>
        <div id="map-patient" style="display:none;"></div>
        <div id="eta-container" class="container" style="text-align: center; font-size: 20px; display:none;">
            <p>Ambulance is on the way. Estimated Time of Arrival: <span id="eta" style="font-weight: bold; color: #e74c3c;">15</span> minutes.</p>
        </div>
        <!-- Contact Form for Patient -->
        <div id="contact-form" class="container" style="display: none;">
            <h3>Enter Your Contact Number</h3>
            <div class="form-group">
                <label for="contact-number">Contact Number:</label>
                <input type="text" id="contact-number" name="contact-number" placeholder="Enter contact number">
            </div>
            <button class="button" onclick="submitContactNumber()">Submit</button>
        </div>
    </div>

    <!-- Driver POV Content -->
    <div id="driver" class="content">
        <div id="driver-login" class="login-container">
            <div class="login-box">
                <h2>Driver Login</h2>
                <div class="form-group">
                    <label for="driver-username">Username:</label>
                    <input type="text" id="driver-username">
                </div>
                <div class="form-group">
                    <label for="driver-password">Password:</label>
                    <input type="password" id="driver-password">
                </div>
                <button class="button" onclick="loginDriver()">Login</button>
                <p id="driver-login-status"></p>
            </div>
        </div>
        <div id="map-driver" style="display:none;"></div>
        <div id="driver-contact-number" class="container" style="font-size: 18px; padding: 20px;">
            <!-- Contact number will appear here -->
        </div>
    </div>

    <!-- Paramedic POV Content -->
    <div id="paramedic" class="content">
        <div id="paramedic-login" class="login-container">
            <div class="login-box">
                <h2>Paramedic Login</h2>
                <div class="form-group">
                    <label for="paramedic-username">Username:</label>
                    <input type="text" id="paramedic-username">
                </div>
                <div class="form-group">
                    <label for="paramedic-password">Password:</label>
                    <input type="password" id="paramedic-password">
                </div>
                <button class="button" onclick="loginParamedic()">Login</button>
                <p id="paramedic-login-status"></p>
            </div>
        </div>
        <div id="paramedic-content" class="container" style="display: none;">
        <h1>Update Patient Data</h1>
        <div class="form-group">
            <label for="paramedic-notes">Patient's Notes:</label>
            <textarea id="paramedic-notes" rows="4" placeholder="Enter notes about the patient"></textarea>
        </div>
        <button class="button" onclick="submitParamedicNotes()">Submit</button>
    </div>
</div>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script>
    let patientLocation = null;
    let contactNumber = "";
    let mapPatient, mapDriver, hospitalLocation = [37.7749, -122.4194];  // Mock hospital location

    function switchTab(tab) {
        document.querySelectorAll('.content').forEach(content => {
            content.classList.remove('active-content');
        });
        document.querySelectorAll('.tab').forEach(tabElement => {
            tabElement.classList.remove('active-tab');
        });

        document.getElementById(tab).classList.add('active-content');
        const activeTab = document.querySelector(`.tab[onclick="switchTab('${tab}')"]`);
        activeTab.classList.add('active-tab');
    }

    // Function to order an ambulance and ask for location access
    function orderAmbulance() {
        if (navigator.geolocation) {
            // Request location
            navigator.geolocation.getCurrentPosition(function(position) {
                // Store the patient's location
                patientLocation = [position.coords.latitude, position.coords.longitude];
                console.log("Patient's location:", patientLocation);

                // Show the contact form after getting location
                document.getElementById('contact-form').style.display = 'block';
            }, function(error) {
                alert("Please enable location access to order an ambulance.");
            });
        } else {
            alert("Geolocation is not supported by your browser.");
        }
    }

    // Function to submit the contact number
    function submitContactNumber() {
        contactNumber = document.getElementById('contact-number').value;
        if (contactNumber) {
            alert("Your contact number has been saved.");

            // Now, display map and connect patient location
            triggerSOS();  // Show map and route to hospital (same as triggerSOS)
            showContactNumberToDriver();  // Show the contact number to the driver
        } else {
            alert("Please enter a contact number.");
        }
    }

    // Function to display map for patient when ambulance is on the way
    function triggerSOS() {
        document.querySelector('.sos-button').style.display = 'none';
        document.getElementById('map-patient').style.display = 'block';
        setTimeout(() => mapPatient.invalidateSize(), 100);

        mapPatient = L.map('map-patient').setView(patientLocation, 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapPatient);

        L.Routing.control({
            waypoints: [
                L.latLng(patientLocation),
                L.latLng(hospitalLocation)
            ]
        }).addTo(mapPatient);

        document.getElementById('eta-container').style.display = 'block';
    }

    // Show the contact number on the driver's view
    function showContactNumberToDriver() {
        // Assuming we have a function to send data to the driver (mocking for now)
        console.log("Contact number for driver:", contactNumber);
        // Add code here to send the contact number to the driver's page
    }

    function loginDriver() {
        document.getElementById('driver-login').style.display = 'none';
        document.getElementById('map-driver').style.display = 'block';

        // Initialize the driver map
        mapDriver = L.map('map-driver').setView([37.7749, -122.4194], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapDriver);

        // Add markers for patient, ambulance, and hospital
        L.marker(patientLocation).addTo(mapDriver).bindPopup('Patient Location');
        L.marker([37.7749, -122.4194]).addTo(mapDriver).bindPopup('Ambulance Location');
        L.marker(hospitalLocation).addTo(mapDriver).bindPopup('Hospital Location');

        // Add route from ambulance to hospital via patient location
        L.Routing.control({
            waypoints: [
                L.latLng([37.7749, -122.4194]),
                L.latLng(patientLocation),
                L.latLng(hospitalLocation)
            ]
        }).addTo(mapDriver);

        // Display contact number (mocked)
        document.getElementById('driver-contact-number').innerHTML = "Contact Number: " + contactNumber;
    }
</script>
</body>
</html>
